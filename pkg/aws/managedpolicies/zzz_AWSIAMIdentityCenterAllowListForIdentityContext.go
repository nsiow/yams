// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
	"github.com/nsiow/yams/pkg/polystring"
)

var AWS_MANAGED_POLICY_AWSIAMIdentityCenterAllowListForIdentityContext = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{Values: []policy.Statement{policy.Statement{Sid: "TrustedIdentityPropagation", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string{"athena:BatchGetNamedQuery", "athena:BatchGetPreparedStatement", "athena:BatchGetQueryExecution", "athena:CreateNamedQuery", "athena:CreatePreparedStatement", "athena:DeleteNamedQuery", "athena:DeletePreparedStatement", "athena:GetNamedQuery", "athena:GetPreparedStatement", "athena:GetQueryExecution", "athena:GetQueryResults", "athena:GetQueryResultsStream", "athena:GetQueryRuntimeStatistics", "athena:GetWorkGroup", "athena:ListNamedQueries", "athena:ListPreparedStatements", "athena:ListQueryExecutions", "athena:StartQueryExecution", "athena:StopQueryExecution", "athena:UpdateNamedQuery", "athena:UpdatePreparedStatement", "athena:GetDatabase", "athena:GetDataCatalog", "athena:GetTableMetadata", "athena:ListDatabases", "athena:ListDataCatalogs", "athena:ListTableMetadata", "athena:ListWorkGroups", "elasticmapreduce:GetClusterSessionCredentials", "glue:GetDatabase", "glue:GetDatabases", "glue:GetTable", "glue:GetTables", "glue:GetTableVersions", "glue:GetPartition", "glue:GetPartitions", "glue:BatchGetPartition", "glue:GetColumnStatisticsForPartition", "glue:GetColumnStatisticsForTable", "glue:SearchTables", "glue:CreateDatabase", "glue:UpdateDatabase", "glue:DeleteDatabase", "glue:CreateTable", "glue:DeleteTable", "glue:BatchDeleteTable", "glue:UpdateTable", "glue:BatchCreatePartition", "glue:CreatePartition", "glue:DeletePartition", "glue:BatchDeletePartition", "glue:UpdatePartition", "glue:BatchUpdatePartition", "glue:DeleteColumnStatisticsForPartition", "glue:DeleteColumnStatisticsForTable", "glue:UpdateColumnStatisticsForPartition", "glue:UpdateColumnStatisticsForTable", "lakeformation:GetDataAccess", "s3:GetAccessGrantsInstanceForPrefix", "s3:GetDataAccess", "qbusiness:Chat", "qbusiness:ChatSync", "qbusiness:ListConversations", "qbusiness:ListMessages", "qbusiness:DeleteConversation", "sts:SetContext"}}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString(nil)}}}}}

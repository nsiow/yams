// This file was automatically generated by build tooling; do not edit!

package aws

import (
	"github.com/nsiow/yams/pkg/policy"
	"github.com/nsiow/yams/pkg/polystring"
)

var AWS_MANAGED_POLICY_AmazonMCSFullAccess = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{Values: []policy.Statement{policy.Statement{Sid: "", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"application-autoscaling:DeleteScalingPolicy", "application-autoscaling:DeregisterScalableTarget", "application-autoscaling:DescribeScalableTargets", "application-autoscaling:DescribeScalingActivities", "application-autoscaling:DescribeScalingPolicies", "application-autoscaling:PutScalingPolicy", "application-autoscaling:RegisterScalableTarget", "application-autoscaling:PutScheduledAction", "application-autoscaling:DeleteScheduledAction", "application-autoscaling:DescribeScheduledActions"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString(nil)}}, policy.Statement{Sid: "", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"cassandra:*"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString(nil)}}, policy.Statement{Sid: "", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"cloudwatch:DeleteAlarms", "cloudwatch:DescribeAlarms", "cloudwatch:PutMetricAlarm"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString(nil)}}, policy.Statement{Sid: "", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"iam:CreateServiceLinkedRole"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:iam::*:role/aws-service-role/cassandra.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_CassandraTable\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"StringLike": polystring.PolyString{Values: []string{"{\n              \"iam:AWSServiceName\": \"cassandra.application-autoscaling.amazonaws.com\"\n            }"}}}}}}}}

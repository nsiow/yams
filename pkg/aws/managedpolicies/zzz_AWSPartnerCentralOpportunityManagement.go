// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
)

var AWS_MANAGED_POLICY_AWSPartnerCentralOpportunityManagement = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{policy.Statement{Sid: "OpportunityManagement", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"partnercentral:AcceptEngagementInvitation", "partnercentral:AssignOpportunity", "partnercentral:AssociateOpportunity", "partnercentral:CreateEngagement", "partnercentral:CreateEngagementInvitation", "partnercentral:CreateOpportunity", "partnercentral:CreateResourceSnapshot", "partnercentral:CreateResourceSnapshotJob", "partnercentral:DeleteResourceSnapshotJob", "partnercentral:DisassociateOpportunity", "partnercentral:GetAwsOpportunitySummary", "partnercentral:GetEngagement", "partnercentral:GetEngagementInvitation", "partnercentral:GetOpportunity", "partnercentral:GetResourceSnapshot", "partnercentral:GetResourceSnapshotJob", "partnercentral:ListEngagementByAcceptingInvitationTasks", "partnercentral:ListEngagementFromOpportunityTasks", "partnercentral:ListEngagementInvitations", "partnercentral:ListEngagementMembers", "partnercentral:ListEngagementResourceAssociations", "partnercentral:ListEngagements", "partnercentral:ListOpportunities", "partnercentral:ListResourceSnapshotJobs", "partnercentral:ListResourceSnapshots", "partnercentral:ListSolutions", "partnercentral:RejectEngagementInvitation", "partnercentral:StartEngagementByAcceptingInvitationTask", "partnercentral:StartEngagementFromOpportunityTask", "partnercentral:StartResourceSnapshotJob", "partnercentral:StopResourceSnapshotJob", "partnercentral:SubmitOpportunity", "partnercentral:UpdateOpportunity"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}, policy.Statement{Sid: "ListingAWSMarketplaceEntities", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"aws-marketplace:ListEntities"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}, policy.Statement{Sid: "AWSMarketplaceOffersAccess", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"aws-marketplace:DescribeEntity"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:aws-marketplace:*:*:AWSMarketplace/Offer/*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}}}

// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
)

var AWS_MANAGED_POLICY_AWSDataExchangeDataGrantOwnerFullAccess = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{policy.Statement{Sid: "DataExchangeActions", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"dataexchange:CreateDataSet", "dataexchange:UpdateDataSet", "dataexchange:GetDataSet", "dataexchange:DeleteDataSet", "dataexchange:ListDataSets", "dataexchange:CreateRevision", "dataexchange:UpdateRevision", "dataexchange:GetRevision", "dataexchange:DeleteRevision", "dataexchange:RevokeRevision", "dataexchange:ListDataSetRevisions", "dataexchange:CreateAsset", "dataexchange:UpdateAsset", "dataexchange:GetAsset", "dataexchange:DeleteAsset", "dataexchange:ListRevisionAssets", "dataexchange:SendApiAsset", "dataexchange:CreateDataGrant", "dataexchange:GetDataGrant", "dataexchange:DeleteDataGrant", "dataexchange:ListDataGrants", "dataexchange:PublishToDataGrant", "dataexchange:SendDataSetNotification", "dataexchange:TagResource", "dataexchange:UntagResource"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}, policy.Statement{Sid: "DataExchangeJobsActions", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"dataexchange:CreateJob", "dataexchange:StartJob", "dataexchange:CancelJob"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value{"StringEquals": map[string]policy.Value{"dataexchange:JobType": policy.Value{"IMPORT_ASSETS_FROM_S3", "IMPORT_ASSET_FROM_SIGNED_URL", "EXPORT_ASSETS_TO_S3", "EXPORT_ASSET_TO_SIGNED_URL", "IMPORT_ASSET_FROM_API_GATEWAY_API", "IMPORT_ASSETS_FROM_REDSHIFT_DATA_SHARES", "IMPORT_ASSETS_FROM_LAKE_FORMATION_TAG_POLICY"}}}}}}

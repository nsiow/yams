// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
)

var AWS_MANAGED_POLICY_ServiceCatalogAdminReadOnlyAccess = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{policy.Statement{Sid: "", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Effect: "Allow", Action: policy.Action{Value: policy.Value{"catalog-admin:DescribeConstraints", "catalog-admin:DescribeListingForProduct", "catalog-admin:DescribeListings", "catalog-admin:DescribePortfolios", "catalog-admin:DescribeProductVersions", "catalog-admin:GetPortfolioCount", "catalog-admin:GetPortfolios", "catalog-admin:GetProductCounts", "catalog-admin:ListAllPortfolioConstraints", "catalog-admin:ListPortfolioConstraints", "catalog-admin:ListPortfolios", "catalog-admin:ListPrincipalConstraints", "catalog-admin:ListProductConstraints", "catalog-admin:ListResourceUsers", "catalog-admin:ListTagsForResource", "catalog-admin:SearchListings", "catalog-user:*", "cloudformation:DescribeStackEvents", "cloudformation:DescribeStacks", "cloudformation:GetTemplateSummary", "iam:GetGroup", "iam:GetRole", "iam:GetUser", "iam:ListGroups", "iam:ListRoles", "iam:ListUsers", "s3:GetObject", "servicecatalog:DescribeTagOption", "servicecatalog:GetTagOptionMigrationStatus", "servicecatalog:ListResourcesForTagOption", "servicecatalog:ListTagOptions", "servicecatalog:AccountLevelDescribeRecord", "servicecatalog:AccountLevelListRecordHistory", "servicecatalog:AccountLevelScanProvisionedProducts", "servicecatalog:DescribeProduct", "servicecatalog:DescribeProductView", "servicecatalog:DescribeProvisioningParameters", "servicecatalog:DescribeProvisionedProduct", "servicecatalog:DescribeRecord", "servicecatalog:ListLaunchPaths", "servicecatalog:ListRecordHistory", "servicecatalog:ScanProvisionedProducts", "servicecatalog:SearchProducts", "servicecatalog:DescribeConstraint", "servicecatalog:DescribeProductAsAdmin", "servicecatalog:DescribePortfolio", "servicecatalog:DescribeProvisioningArtifact", "servicecatalog:ListAcceptedPortfolioShares", "servicecatalog:ListConstraintsForPortfolio", "servicecatalog:ListPortfolioAccess", "servicecatalog:ListPortfolios", "servicecatalog:ListPortfoliosForProduct", "servicecatalog:ListPrincipalsForPortfolio", "servicecatalog:ListProvisioningArtifacts", "servicecatalog:SearchProductsAsAdmin"}}, NotAction: policy.Action{Value: policy.Value(nil)}, Resource: policy.Resource{Value: policy.Value{"*"}}, NotResource: policy.Resource{Value: policy.Value(nil)}, Condition: policy.ConditionBlock(nil)}}}

// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
)

var AWS_MANAGED_POLICY_AWSElasticDisasterRecoveryStagingAccountPolicy_v2 = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{policy.Statement{Sid: "DRSStagingAccountPolicyv21", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Effect: "Allow", Action: policy.Value{"drs:DescribeSourceServers", "drs:DescribeRecoverySnapshots", "drs:CreateConvertedSnapshotForDrs", "drs:GetReplicationConfiguration", "drs:DescribeJobs", "drs:DescribeJobLogItems"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: policy.ConditionBlock(nil)}, policy.Statement{Sid: "DRSStagingAccountPolicyv22", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Effect: "Allow", Action: policy.Value{"ec2:ModifySnapshotAttribute"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:ec2:*:*:snapshot/*"}, NotResource: policy.Value(nil), Condition: policy.ConditionBlock{"Null": policy.Condition{"aws:ResourceTag/AWSElasticDisasterRecoveryManaged": "false"}, "StringEquals": policy.Condition{"ec2:Add/userId": "${aws:SourceIdentity}"}}}, policy.Statement{Sid: "DRSStagingAccountPolicyv23", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Effect: "Allow", Action: policy.Value{"drs:IssueAgentCertificateForDrs"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:drs:*:*:source-server/*"}, NotResource: policy.Value(nil), Condition: policy.ConditionBlock(nil)}}}

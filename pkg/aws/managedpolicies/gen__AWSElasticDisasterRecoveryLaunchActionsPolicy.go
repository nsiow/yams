// This file was automatically generated by build tooling; do not edit!

package aws

import (
	"github.com/nsiow/yams/pkg/policy"
	"github.com/nsiow/yams/pkg/polystring"
)

var AWS_MANAGED_POLICY_AWSElasticDisasterRecoveryLaunchActionsPolicy = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{Values: []policy.Statement{policy.Statement{Sid: "LaunchActionsPolicy1", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:DescribeInstanceInformation"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"*"}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ForAnyValue:StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:CalledVia\": [\n                \"drs.amazonaws.com\"\n              ]\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy2", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:SendCommand", "ssm:StartAutomationExecution"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"arn:aws:ssm:*:*:document/*", "arn:aws:ssm:*:*:automation-definition/*:*"}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ForAnyValue:StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:CalledVia\": [\n                \"drs.amazonaws.com\"\n              ]\n            }"}}, "StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:ResourceAccount\": \"${aws:PrincipalAccount}\"\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy3", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:SendCommand", "ssm:StartAutomationExecution"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"arn:aws:ssm:*::document/AWS-*", "arn:aws:ssm:*::document/AWSCodeDeployAgent-*", "arn:aws:ssm:*::document/AWSConfigRemediation-*", "arn:aws:ssm:*::document/AWSConformancePacks-*", "arn:aws:ssm:*::document/AWSDisasterRecovery-*", "arn:aws:ssm:*::document/AWSDistroOTel-*", "arn:aws:ssm:*::document/AWSDocs-*", "arn:aws:ssm:*::document/AWSEC2-*", "arn:aws:ssm:*::document/AWSEC2Launch-*", "arn:aws:ssm:*::document/AWSFIS-*", "arn:aws:ssm:*::document/AWSFleetManager-*", "arn:aws:ssm:*::document/AWSIncidents-*", "arn:aws:ssm:*::document/AWSKinesisTap-*", "arn:aws:ssm:*::document/AWSMigration-*", "arn:aws:ssm:*::document/AWSNVMe-*", "arn:aws:ssm:*::document/AWSNitroEnclavesWindows-*", "arn:aws:ssm:*::document/AWSObservabilityExporter-*", "arn:aws:ssm:*::document/AWSPVDriver-*", "arn:aws:ssm:*::document/AWSQuickSetupType-*", "arn:aws:ssm:*::document/AWSQuickStarts-*", "arn:aws:ssm:*::document/AWSRefactorSpaces-*", "arn:aws:ssm:*::document/AWSResilienceHub-*", "arn:aws:ssm:*::document/AWSSAP-*", "arn:aws:ssm:*::document/AWSSAPTools-*", "arn:aws:ssm:*::document/AWSSQLServer-*", "arn:aws:ssm:*::document/AWSSSO-*", "arn:aws:ssm:*::document/AWSSupport-*", "arn:aws:ssm:*::document/AWSSystemsManagerSAP-*", "arn:aws:ssm:*::document/AmazonCloudWatch-*", "arn:aws:ssm:*::document/AmazonCloudWatchAgent-*", "arn:aws:ssm:*::document/AmazonECS-*", "arn:aws:ssm:*::document/AmazonEFSUtils-*", "arn:aws:ssm:*::document/AmazonEKS-*", "arn:aws:ssm:*::document/AmazonInspector-*", "arn:aws:ssm:*::document/AmazonInspector2-*", "arn:aws:ssm:*::document/AmazonInternal-*", "arn:aws:ssm:*::document/AwsEnaNetworkDriver-*", "arn:aws:ssm:*::document/AwsVssComponents-*", "arn:aws:ssm:*::automation-definition/AWS-*:*", "arn:aws:ssm:*::automation-definition/AWSCodeDeployAgent-*:*", "arn:aws:ssm:*::automation-definition/AWSConfigRemediation-*:*", "arn:aws:ssm:*::automation-definition/AWSConformancePacks-*:*", "arn:aws:ssm:*::automation-definition/AWSDisasterRecovery-*:*", "arn:aws:ssm:*::automation-definition/AWSDistroOTel-*:*", "arn:aws:ssm:*::automation-definition/AWSDocs-*:*", "arn:aws:ssm:*::automation-definition/AWSEC2-*:*", "arn:aws:ssm:*::automation-definition/AWSEC2Launch-*:*", "arn:aws:ssm:*::automation-definition/AWSFIS-*:*", "arn:aws:ssm:*::automation-definition/AWSFleetManager-*:*", "arn:aws:ssm:*::automation-definition/AWSIncidents-*:*", "arn:aws:ssm:*::automation-definition/AWSKinesisTap-*:*", "arn:aws:ssm:*::automation-definition/AWSMigration-*:*", "arn:aws:ssm:*::automation-definition/AWSNVMe-*:*", "arn:aws:ssm:*::automation-definition/AWSNitroEnclavesWindows-*:*", "arn:aws:ssm:*::automation-definition/AWSObservabilityExporter-*:*", "arn:aws:ssm:*::automation-definition/AWSPVDriver-*:*", "arn:aws:ssm:*::automation-definition/AWSQuickSetupType-*:*", "arn:aws:ssm:*::automation-definition/AWSQuickStarts-*:*", "arn:aws:ssm:*::automation-definition/AWSRefactorSpaces-*:*", "arn:aws:ssm:*::automation-definition/AWSResilienceHub-*:*", "arn:aws:ssm:*::automation-definition/AWSSAP-*:*", "arn:aws:ssm:*::automation-definition/AWSSAPTools-*:*", "arn:aws:ssm:*::automation-definition/AWSSQLServer-*:*", "arn:aws:ssm:*::automation-definition/AWSSSO-*:*", "arn:aws:ssm:*::automation-definition/AWSSupport-*:*", "arn:aws:ssm:*::automation-definition/AWSSystemsManagerSAP-*:*", "arn:aws:ssm:*::automation-definition/AmazonCloudWatch-*:*", "arn:aws:ssm:*::automation-definition/AmazonCloudWatchAgent-*:*", "arn:aws:ssm:*::automation-definition/AmazonECS-*:*", "arn:aws:ssm:*::automation-definition/AmazonEFSUtils-*:*", "arn:aws:ssm:*::automation-definition/AmazonEKS-*:*", "arn:aws:ssm:*::automation-definition/AmazonInspector-*:*", "arn:aws:ssm:*::automation-definition/AmazonInspector2-*:*", "arn:aws:ssm:*::automation-definition/AmazonInternal-*:*", "arn:aws:ssm:*::automation-definition/AwsEnaNetworkDriver-*:*", "arn:aws:ssm:*::automation-definition/AwsVssComponents-*:*"}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ForAnyValue:StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:CalledVia\": [\n                \"drs.amazonaws.com\"\n              ]\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy4", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:SendCommand"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"arn:aws:ec2:*:*:instance/*"}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ForAnyValue:StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:CalledVia\": [\n                \"drs.amazonaws.com\"\n              ]\n            }"}}, "Null": polystring.PolyString{Values: []string{"{\n              \"aws:ResourceTag/AWSElasticDisasterRecoveryManaged\": \"false\"\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy5", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:SendCommand"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"arn:aws:ec2:*:*:instance/*"}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ForAnyValue:StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:CalledVia\": [\n                \"drs.amazonaws.com\"\n              ]\n            }"}}, "StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:ResourceTag/AWSDRS\": \"AllowLaunchingIntoThisInstance\"\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy6", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:ListDocuments", "ssm:ListCommandInvocations"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString(nil)}}, policy.Statement{Sid: "LaunchActionsPolicy7", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:ListDocumentVersions", "ssm:GetDocument", "ssm:DescribeDocument"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:ssm:*:*:document/*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString(nil)}}, policy.Statement{Sid: "LaunchActionsPolicy8", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:GetAutomationExecution"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:ssm:*:*:automation-execution/*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"Null": polystring.PolyString{Values: []string{"{\n              \"aws:ResourceTag/AWSElasticDisasterRecoveryManaged\": \"false\"\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy9", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:GetParameters"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:ssm:*:*:parameter/ManagedByAWSElasticDisasterRecoveryService-*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ForAnyValue:StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:CalledVia\": \"ssm.amazonaws.com\"\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy10", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"ssm:GetParameter", "ssm:PutParameter"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:ssm:*:*:parameter/ManagedByAWSElasticDisasterRecoveryService-*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:ResourceAccount\": \"${aws:PrincipalAccount}\"\n            }"}}}}}, policy.Statement{Sid: "LaunchActionsPolicy11", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"iam:PassRole"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"arn:aws:iam::*:role/service-role/AWSElasticDisasterRecoveryRecoveryInstanceWithLaunchActionsRole"}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ForAnyValue:StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:CalledVia\": \"drs.amazonaws.com\"\n            }"}}, "StringEquals": polystring.PolyString{Values: []string{"{\n              \"iam:PassedToService\": \"ec2.amazonaws.com\"\n            }"}}}}}}}}

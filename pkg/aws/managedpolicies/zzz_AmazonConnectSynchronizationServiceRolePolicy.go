// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
)

var AWS_MANAGED_POLICY_AmazonConnectSynchronizationServiceRolePolicy = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{policy.Statement{Sid: "AllowConnectActions", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"connect:Create*", "connect:Update*", "connect:Delete*", "connect:Describe*", "connect:List*", "connect:Search*", "connect:Associate*", "connect:Disassociate*", "connect:Get*", "connect:BatchGet*", "connect:TagResource", "connect:UntagResource"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}, policy.Statement{Sid: "DisallowedConnectActions", Effect: "Deny", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"connect:Start*", "connect:Stop*", "connect:Resume*", "connect:Suspend*", "connect:*Contact", "connect:SearchContacts", "connect:*ContactAttributes*", "connect:*RealtimeContact*", "connect:*AnalyticsData*", "connect:*MetricData*", "connect:*UserData*", "connect:*ContactEvaluation", "connect:*AttachedFile*", "connect:UpdateContactSchedule", "connect:UpdateContactRoutingData", "connect:ListContactReferences", "connect:CreateParticipant", "connect:CreatePersistentContactAssociation", "connect:CreateInstance", "connect:DeleteInstance", "connect:ListInstances", "connect:ReplicateInstance", "connect:GetFederationToken", "connect:ClaimPhoneNumber", "connect:ImportPhoneNumber", "connect:ReleasePhoneNumber", "connect:SearchAvailablePhoneNumbers", "connect:CreateTrafficDistributionGroup", "connect:DeleteTrafficDistributionGroup", "connect:GetTrafficDistribution", "connect:UpdateTrafficDistribution"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}, policy.Statement{Sid: "AllowPutMetricsForConnectNamespace", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"cloudwatch:PutMetricData"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value{"StringEquals": map[string]policy.Value{"cloudwatch:namespace": policy.Value{"AWS/Connect"}}}}}}

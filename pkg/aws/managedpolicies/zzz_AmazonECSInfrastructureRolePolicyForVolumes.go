// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
)

var AWS_MANAGED_POLICY_AmazonECSInfrastructureRolePolicyForVolumes = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{policy.Statement{Sid: "CreateEBSManagedVolume", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"ec2:CreateVolume"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:ec2:*:*:volume/*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value{"ArnLike": map[string]policy.Value{"aws:RequestTag/AmazonECSCreated": policy.Value{"arn:aws:ecs:*:*:task/*"}}, "StringEquals": map[string]policy.Value{"aws:RequestTag/AmazonECSManaged": policy.Value{"true"}}}}, policy.Statement{Sid: "TagOnCreateVolume", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"ec2:CreateTags"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:ec2:*:*:volume/*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value{"ArnLike": map[string]policy.Value{"aws:RequestTag/AmazonECSCreated": policy.Value{"arn:aws:ecs:*:*:task/*"}}, "StringEquals": map[string]policy.Value{"aws:RequestTag/AmazonECSManaged": policy.Value{"true"}, "ec2:CreateAction": policy.Value{"CreateVolume"}}}}, policy.Statement{Sid: "DescribeVolumesForLifecycle", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"ec2:DescribeVolumes", "ec2:DescribeAvailabilityZones"}, NotAction: policy.Value(nil), Resource: policy.Value{"*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}, policy.Statement{Sid: "ManageEBSVolumeLifecycle", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"ec2:AttachVolume", "ec2:DetachVolume"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:ec2:*:*:volume/*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value{"StringEquals": map[string]policy.Value{"aws:ResourceTag/AmazonECSManaged": policy.Value{"true"}}}}, policy.Statement{Sid: "ManageVolumeAttachmentsForEC2", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"ec2:AttachVolume", "ec2:DetachVolume"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:ec2:*:*:instance/*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value(nil)}, policy.Statement{Sid: "DeleteEBSManagedVolume", Effect: "Allow", Principal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, NotPrincipal: policy.Principal{AWS: policy.Value(nil), Federated: policy.Value(nil), Service: policy.Value(nil), CanonicalUser: policy.Value(nil)}, Action: policy.Value{"ec2:DeleteVolume"}, NotAction: policy.Value(nil), Resource: policy.Value{"arn:aws:ec2:*:*:volume/*"}, NotResource: policy.Value(nil), Condition: map[string]map[string]policy.Value{"ArnLike": map[string]policy.Value{"aws:ResourceTag/AmazonECSCreated": policy.Value{"arn:aws:ecs:*:*:task/*"}}, "StringEquals": map[string]policy.Value{"aws:ResourceTag/AmazonECSManaged": policy.Value{"true"}}}}}}

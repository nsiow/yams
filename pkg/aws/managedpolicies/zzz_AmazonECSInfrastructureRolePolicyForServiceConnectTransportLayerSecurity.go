// This file was automatically generated by build tooling; do not edit!

package managedpolicies

import (
	"github.com/nsiow/yams/pkg/policy"
	"github.com/nsiow/yams/pkg/polystring"
)

var AWS_MANAGED_POLICY_AmazonECSInfrastructureRolePolicyForServiceConnectTransportLayerSecurity = policy.Policy{Version: "2012-10-17", Id: "", Statement: policy.StatementBlock{Values: []policy.Statement{policy.Statement{Sid: "CreateSecret", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"secretsmanager:CreateSecret"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:secretsmanager:*:*:secret:ecs-sc!*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ArnLike": polystring.PolyString{Values: []string{"{\n              \"aws:RequestTag/AmazonECSCreated\": [\n                \"arn:aws:ecs:*:*:service/*/*\",\n                \"arn:aws:ecs:*:*:task-set/*/*\"\n              ]\n            }"}}, "StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:RequestTag/AmazonECSManaged\": \"true\",\n              \"aws:ResourceAccount\": \"${aws:PrincipalAccount}\"\n            }"}}}}}, policy.Statement{Sid: "TagOnCreateSecret", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"secretsmanager:TagResource"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:secretsmanager:*:*:secret:ecs-sc!*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"ArnLike": polystring.PolyString{Values: []string{"{\n              \"aws:RequestTag/AmazonECSCreated\": [\n                \"arn:aws:ecs:*:*:service/*/*\",\n                \"arn:aws:ecs:*:*:task-set/*/*\"\n              ]\n            }"}}, "StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:RequestTag/AmazonECSManaged\": \"true\",\n              \"aws:ResourceAccount\": \"${aws:PrincipalAccount}\"\n            }"}}}}}, policy.Statement{Sid: "RotateTLSCertificateSecret", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"secretsmanager:DescribeSecret", "secretsmanager:UpdateSecret", "secretsmanager:GetSecretValue", "secretsmanager:PutSecretValue", "secretsmanager:DeleteSecret", "secretsmanager:RotateSecret", "secretsmanager:UpdateSecretVersionStage"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"arn:aws:secretsmanager:*:*:secret:ecs-sc!*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:ResourceAccount\": \"${aws:PrincipalAccount}\",\n              \"secretsmanager:ResourceTag/aws:secretsmanager:owningService\": \"ecs-sc\"\n            }"}}}}}, policy.Statement{Sid: "ManagePrivateCertificateAuthority", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"acm-pca:GetCertificate", "acm-pca:GetCertificateAuthorityCertificate", "acm-pca:DescribeCertificateAuthority"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"StringEquals": polystring.PolyString{Values: []string{"{\n              \"aws:ResourceTag/AmazonECSManaged\": \"true\"\n            }"}}}}}, policy.Statement{Sid: "ManagePrivateCertificateAuthorityForIssuingEndEntityCertificate", Principal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, NotPrincipal: policy.Principal{AWS: polystring.PolyString{Values: []string(nil)}, Federated: polystring.PolyString{Values: []string(nil)}, Service: polystring.PolyString{Values: []string(nil)}, CanonicalUser: polystring.PolyString{Values: []string(nil)}}, Action: policy.Action{PolyString: polystring.PolyString{Values: []string{"acm-pca:IssueCertificate"}}}, NotAction: policy.Action{PolyString: polystring.PolyString{Values: []string(nil)}}, Resource: policy.Resource{PolyString: polystring.PolyString{Values: []string{"\"*\""}}}, NotResource: policy.Resource{PolyString: polystring.PolyString{Values: []string(nil)}}, Condition: policy.Condition{Map: map[string]polystring.PolyString{"StringEquals": polystring.PolyString{Values: []string{"{\n              \"acm-pca:TemplateArn\": \"arn:aws:acm-pca:::template/EndEntityCertificate/V1\",\n              \"aws:ResourceTag/AmazonECSManaged\": \"true\"\n            }"}}}}}}}}
